{"version":3,"sources":["components/navbar.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["Mynavbar","className","href","type","id","MainArea","props","value","fromAmount","onChange","fromAmountChange","selectedCurrency","onChangeFromCurrency","CurrencyOptions","map","option","onChangeToAmount","toAmount","onChangeToCurrency","App","useState","baseCurrency","setbaseCurrency","baseUrl","setCurrencyOptions","fromCurrency","setFromCurrency","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","exchangeRates","setExchangeRates","toCurrency","setToCurrency","i","console","log","useEffect","fetch","then","res","json","data","base","Object","keys","conversion_rates","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fbe6dc3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Mynavbar() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">CurrencyConverter</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" href=\"/\">About</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" href=\"/\">Contact</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function MainArea(props) {\r\n    // const{\r\n    //     CurrencyOptions\r\n    // } = props \r\n    \r\n  return (\r\n      <>\r\n    <div className=\"container my-4\">\r\n        <h2>Currency Converter</h2>\r\n        <h4 className='my-2'>Convert at Real Currency Rates</h4>\r\n      <div className=\"container d-flex justify-content-around\">\r\n        <div>\r\n            Enter Amount:\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n                value={props.fromAmount}\r\n                onChange={props.fromAmountChange}\r\n              type= \"number\"\r\n              className=\"form-control\"\r\n              aria-label=\"Text input with dropdown button\"\r\n            />\r\n            <select value={props.selectedCurrency} onChange={props.onChangeFromCurrency}>\r\n            {/* <option value=\"sc\">Select Currency</option> */}\r\n            {props.CurrencyOptions.map(option => (\r\n                <option value={option} key={option}>{option}</option>\r\n            ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <strong>â‡„</strong>\r\n        <div>Convert To:<div className=\"input-group mb-3\">\r\n            <input \r\n                onChange={props.onChangeToAmount}\r\n                value={props.toAmount}\r\n              type= \"number\"\r\n              className=\"form-control\"\r\n              aria-label=\"Text input with dropdown button\"\r\n            />\r\n           <select onChange={props.onChangeToCurrency}>\r\n               <option value=\"sc\">Select Currency</option>\r\n            {props.CurrencyOptions.map(option => (\r\n                <option value={option} key={option}>{option}</option>\r\n            ))}\r\n           </select>\r\n          </div></div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React , {useEffect, useState} from 'react';\nimport './App.css';\nimport Mynavbar from './components/navbar';\nimport MainArea from './components/main';\n\nfunction App() {\n\n  const [baseCurrency, setbaseCurrency] = useState('USD')\n  const baseUrl = `https://v6.exchangerate-api.com/v6/cfd02ef38bb80fc0815daf0d/latest/${baseCurrency}`\n  const [CurrencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n  const [exchangeRates, setExchangeRates] = useState()\n  const [toCurrency, setToCurrency] = useState()\n\n  // var cc = require('currency-codes');\n  // console.log(CurrencyOptions.map(op=>(cc.code(op).currency)));\n  \n  // console.log(CurrencyOptions.filter(function(element){\n  //   return element !== undefined;\n  // }))\n  for(let i=1; i<90; i=i*20){\n    console.log(i);\n  }\n  let toAmount, fromAmount\n  if(amountInFromCurrency){\n    fromAmount = amount\n    toAmount = amount * exchangeRates\n  }\n  else{\n    toAmount = amount\n    fromAmount = amount / exchangeRates\n  }\n\n\n  useEffect(() => {\n    fetch(baseUrl)\n    .then (res => res.json())\n    .then(data => {\n      setCurrencyOptions([data.base, ...Object.keys(data.conversion_rates)])\n      setFromCurrency(baseCurrency) \n      setExchangeRates(Object(data.conversion_rates[`${toCurrency}`]))\n      // setToAmount(exchangeRates*fromAmount)\n      \n    })\n  }, [ baseCurrency, baseUrl , toCurrency])\n  function handleOnChangeToAmount(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  return (\n\n   <div>\n     <Mynavbar/> \n     <MainArea CurrencyOptions = {CurrencyOptions} \n     selectedCurrency ={fromCurrency} onChangeFromCurrency={e => setbaseCurrency(e.target.value)}\n      fromAmount = {fromAmount}\n      fromAmountChange ={handleFromAmountChange}\n      onChangeToCurrency = {e => setToCurrency(e.target.value)}\n      toAmount={toAmount}\n      onChangeToAmount={handleOnChangeToAmount}\n     />\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}